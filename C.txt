CÓDIGO DE COMPILAÇÃO: gcc -g teste1.c -o teste1.exe -lm

BIBLIOTECAS
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

ESQUELETO
int main ()
{

return 0;
}

TIPOS DE DADOS
    Primitivo
        int: números inteiros - Z inteiros e N naturais (???) 
        float: números racionais - Q racionais, Z inteiros e N naturais (6 casas decimais )
        double: até 15 casas decimais - (8 bytes)
        char: 1 caracter (1 byte)
        
    Derivado
        array
        structure
        union
        enum
        pointer

CONVERSÃO DA FUNÇÃO "scanf"
%d variavel int (número inteiro)
%f variavel float (números reais) 
%c variavel char (caracter)

CÓDIGOS ESPECIAIS
\n quebra de linha
\t executa uma tabulação
&  endereço de memória

EXPRESSÃO RELACIONAL
< menor
> maior
<= menor ou igual
>= maior ou igual
!= diferente
== igual

ATRIBUIÇÃO DE VARIÁVEL
nome_da_variavel = expr_aritmética
int main () {
    char cor;
    cor = a;

    float num;
    num = 2;
return 0;
}    

COMANDO DE REPETIÇÃO: while /*(condição de parada)/*
    while (num != 0) {
        <comando_1>;
            <comando_2>;
                <comando_n>;
    }

STRING: vetor de caracteres ou sequência de caracteres
São usadas para representar textos - um vetor do tipo char
Exemplo: 
    char nome_cliente[61];
Criar variável nome_cliente com capacidade de armazenamento de 61 caracteres.
O último caracter de uma string, deve ser sempre o caracter numo "\0" que serve para indicar o final da string.
Sendo assim, no exemplo temos 60 caracteres uteis para armazenar o nome, pois \0 é o terminador da string e ocupa uma posição de armazenamento.
O restante das posições estão livres para armazenamento de caracteres.
A função scanf permite fazer leitura de strings usando %s.
Observações:
    - A função scanf realiza a leitura até encontrar um espaço, depois encerra a leitura e coloca o caracters terminador \0.
    - A variável que vai armazenar a string não necessita ser precedida por &.
Exemplo: scanf ("%s", nome_cliente);

FUNÇÃO GETS - (get string)
Armazenar tudo o que foi digitado, inclusive os espaços, até que a tecla ENTER seja pressionada.
Exemplo: 
    printf ("Digite o nome do cliente:");
    gets (nome_cliente);

#include<stdio.h>
#include<conio.h>
int main(void)
{
    char nome[61];
      
    printf("Digite seu nome: ");
    gets(nome);
      
    printf("O nome armazenado foi: %s", nome);
      
    getch();
    return 0;
    }